{"version":3,"sources":["api/api.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["request","url","fetch","then","response","ok","Error","status","statusText","json","result","data","getUser","userId","TodoList","state","title","completed","this","props","todos","selectUser","selectedUserId","filteredTodos","filter","todo","toLowerCase","includes","className","type","value","placeholder","onChange","event","setState","target","name","map","key","id","classNames","checked","onClick","React","Component","CurrentUser","user","prevProps","clearUser","email","phone","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56b51169.chunk.js","sourcesContent":["const BASE_URL = 'https://mate-api.herokuapp.com';\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  })\n  .then(result => result.data);\n\nexport const getTodos = () => request('/todos');\nexport const getUser = userId => request(`/users/ ${userId}`);\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    title: '',\n    completed: 'all',\n  };\n\n  render() {\n    const { todos, selectUser, selectedUserId } = this.props;\n    const { completed } = this.state;\n\n    const filteredTodos = todos\n      .filter(todo => todo.title && todo.title.toLowerCase()\n        .includes(this.state.title.toLowerCase()))\n      .filter((todo) => {\n        if (completed === 'completed') {\n          return todo.completed;\n        }\n\n        if (completed === 'uncompleted') {\n          return !todo.completed;\n        }\n\n        return todo;\n      });\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <form className=\"d-flex gap-3 mb-3 ms-5\">\n            <input\n              type=\"text\"\n              value={this.state.title}\n              placeholder=\"Title\"\n              onChange={(event) => {\n                this.setState({\n                  title: event.target.value,\n                });\n              }}\n            />\n            <select\n              name=\"todos\"\n              value={this.state.completed}\n              onChange={(event) => {\n                this.setState({ completed: event.target.value });\n              }}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"uncompleted\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </form>\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item',\n                  {\n                    'TodoList__item--checked': todo.completed,\n                    'TodoList__item--unchecked': !todo.completed,\n                  })}\n              >\n                <label>\n                  <input type=\"checkbox\" checked={todo.completed} />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  type=\"button\"\n                  className={\n                    classNames('button', 'TodoList__user-button',\n                      { 'TodoList__user-button--selected':\n                    todo.userId === selectedUserId })\n                    }\n                  onClick={() => {\n                    selectUser(todo.userId);\n                  }}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number,\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getUser } from '../../api/api';\n\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  };\n\n  componentDidMount() {\n    getUser(this.props.userId)\n      .then((user) => {\n        this.setState({\n          user,\n        });\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId === this.props.userId) {\n      return;\n    }\n\n    getUser(this.props.userId)\n      .then((user) => {\n        this.setState({\n          user,\n        });\n      });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { userId, clearUser } = this.props;\n\n    return (\n\n      <>\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              Selected user:\n              {userId}\n            </span>\n            <button\n              type=\"button\"\n              onClick={() => {\n                clearUser(user.id);\n              }}\n              className=\"btn btn-outline-secondary ms-3\"\n            >\n              Clear\n            </button>\n          </h2>\n\n          {user && (\n          <>\n            <h3 className=\"CurrentUser__name\">{user.name}</h3>\n            <p className=\"CurrentUser__email\">{user.email}</p>\n            <p className=\"CurrentUser__phone\">{user.phone}</p>\n          </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\n\nimport { getTodos } from './api/api';\n\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        this.setState({ todos });\n      });\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  };\n\n  clearUser = (userId) => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                clearUser={this.clearUser}\n                userId={selectedUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}